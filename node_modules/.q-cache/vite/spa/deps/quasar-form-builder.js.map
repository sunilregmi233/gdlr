{
  "version": 3,
  "sources": ["../../../../quasar-form-builder/index.js", "../../../../shvl/index.js", "../../../../quasar-form-builder/src/mixins/inputMixin.js", "dep:quasar-form-builder"],
  "sourcesContent": ["import FormBuilder from './src/FormBuilder.vue'\nimport inputMixin from './src/mixins/inputMixin.js'\nimport FormBuilderGenerator from './src/components/formBuilderGenerator.vue'\nconst FormBuilderObject = { FormBuilder, inputMixin, FormBuilderGenerator }\n\nexport {\n  FormBuilderObject as default,\n  FormBuilder,\n  inputMixin,\n  FormBuilderGenerator\n}\n", "export function get(object, path, def) {\n  return (object = (path.split ? path.split('.') : path).reduce(function (obj, p) {\n    return obj && obj[p]\n  }, object)) === undefined ? def : object;\n};\n\nexport function set  (object, path, val, obj) {\n  return ((path = path.split ? path.split('.') : path.slice(0)).slice(0, -1).reduce(function (obj, p) {\n    return (!/^(__proto__|constructor|prototype)$/.test(p))? obj[p] = obj[p] || {} : {};\n  }, obj = object)[path.pop()] = val), object;\n};\n", "import * as shvl from 'shvl'\n\nexport default {\n  props: {\n    name: {\n      default: '',\n      type: String\n    },\n    label: {\n      default: '',\n      type: String\n    },\n    disable: {\n      default: false,\n      type: Boolean\n    },\n    readonly: {\n      default: false,\n      type: Boolean\n    },\n    filled: {\n      default: false,\n      type: Boolean\n    },\n    min: {\n      default: 0,\n      type: Number\n    },\n    max: {\n      default: 100,\n      type: Number\n    },\n    color: {\n      default: 'primary',\n      type: String\n    },\n    behavior: {\n      default: 'default',\n      type: String\n    },\n    type: {\n      default: 'radio', // checkbox-toggle\n      // Object type is for custom components\n      type: [String, Object]\n    },\n    inline: {\n      default: true,\n      type: Boolean\n    },\n    dense: {\n      default: true,\n      type: Boolean\n    },\n    rounded: {\n      default: false,\n      type: Boolean\n    },\n    multiple: {\n      default: false,\n      type: Boolean\n    },\n    range: {\n      default: false,\n      type: Boolean\n    },\n    useChips: {\n      default: false,\n      type: Boolean\n    },\n    createNewValue: {\n      default: false,\n      type: Boolean\n    },\n    optionValue: {\n      default: 'value',\n      type: String\n    },\n    optionLabel: {\n      default: 'label',\n      type: String\n    },\n    size: {\n      default: '50px',\n      type: String\n    },\n    fontSize: {\n      default: '14px',\n      type: String\n    },\n    textColor: {\n      default: 'white',\n      type: String\n    },\n    icon: {\n      default: '',\n      type: String\n    },\n    class: {\n      default: '',\n      type: String\n    },\n    options: {\n      default: () => [],\n      type: Array\n    },\n    hidden: {\n      default: false,\n      type: Boolean\n    },\n    src: {\n      default: '',\n      type: [String, Number, Boolean, Array, Boolean]\n    },\n    responseKey: {\n      default: () => {\n        return {}\n      },\n      type: [String, Number, Boolean, Array, Boolean, Object]\n    },\n    ripple: {\n      default: false,\n      type: [Boolean, Object]\n    },\n    outlined: {\n      default: false,\n      type: [Boolean]\n    },\n    flat: {\n      default: false,\n      type: [Boolean]\n    },\n    placeholder: {\n      default: '',\n      type: String\n    },\n    rules: {\n      default: () => [],\n      type: [Array]\n    },\n    lazyRules: {\n      default: false,\n      type: [Boolean]\n    },\n    col: {\n      default: '',\n      type: String\n    },\n    customLabelStyle: {\n      default: '',\n      type: String\n    },\n    inputType: {\n      default: 'text',\n      type: String\n    },\n    clearable: {\n      default: false,\n      type: Boolean\n    },\n    loading: {\n      default: false,\n      type: Boolean\n    }\n  },\n  computed: {\n    customClass () {\n      return this.class\n    }\n  },\n  watch: {\n    value () {\n      this.inputData = this.value\n    }\n  },\n  emits: ['update:value', 'input', 'change', 'onClick', 'onKeyPress'],\n  data () {\n    return {\n      inputData: null\n    }\n  },\n  created () {\n    this.inputData = this.value\n  },\n  methods: {\n    onClick (data) {\n      this.$emit('onClick', data)\n    },\n    onKeyPress (data) {\n      this.$emit('onKeyPress', data)\n    },\n    change (val) {\n      this.$emit('update:value', val)\n    },\n    normalizeInput (input) {\n      const ignoreValueTypes = [\n        'separator',\n        'formBuilder',\n        'button'\n      ]\n      if (ignoreValueTypes.includes(input.type) && typeof input.ignoreValue === 'undefined') {\n        input.ignoreValue = true\n      }\n      return input\n    },\n    getValues () {\n      const that = this\n      function getFlatInputs (inputs) {\n        let values = []\n        inputs.forEach(input => {\n          input = that.normalizeInput(input)\n          if (input.type !== 'formBuilder') {\n            values.push(input)\n          } else {\n            const formBuilderInputs = getFlatInputs(input.value)\n            values = values.concat(formBuilderInputs)\n          }\n        })\n        return values\n      }\n\n      return getFlatInputs(this.inputData)\n    },\n    getFormData() {\n      const formHasFileInput = this.formHasFileInput()\n      const formData = formHasFileInput ? new FormData() : {}\n      const inputs = this.getValues().filter(item => !item.disable && !item.ignoreValue && typeof item.value !== 'undefined')\n      inputs.forEach((item) => {\n        if (item.type.toString().toLowerCase() === 'file' && !this.isFile(item.value)) {\n          return\n        }\n\n        if (formHasFileInput) {\n          if (Array.isArray(item.value)) {\n            item.value.forEach(arrayValue => {\n              formData.append(item.name + '[]', arrayValue)\n            })\n          } else {\n            formData.append(item.name, item.value)\n          }\n        } else {\n          shvl.set(formData, item.name, item.value)\n        }\n      })\n\n      return formData\n    },\n    formHasFileInput() {\n      const inputs = this.getValues().filter(item => !item.disable && !item.ignoreValue && typeof item.value !== 'undefined' && item.value !== null)\n      const target = inputs.find((item) => item.type === 'file' && this.isFile(item.value))\n      return !!target\n    },\n    isFile(file) {\n      return file instanceof File\n    }\n  }\n}\n", "import d from \"./node_modules/quasar-form-builder/index.js\";export default d;\nexport * from \"./node_modules/quasar-form-builder/index.js\""],
  "mappings": "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",
  "names": ["set", "object", "path", "val", "obj", "split", "slice", "reduce", "p", "test", "pop"]
}
